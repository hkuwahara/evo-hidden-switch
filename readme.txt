1. Simulation to generate data for the gene circuit model:
a. go to the "evo-sim" subdirectory and type in "make" to generate the executable for the simulator.  The simulator was coded in C, and it needs the POSIX library as pthread was used.  Other than that, only standard C libraries were used.  The installation is expected to be quick (order of seconds).  The installation was tested on Ubuntu versions 14.04, 16.04, and 18.04.    
b. go back to the top level directory, and type in "./run-sample.sh" to run the simulator.  This simulation will take some time, maybe weeks depending on the runtime environments.  On a 24-core Xeon E5-2680 workstation, it took over 2 weeks to get the simulation finished.  

The following is a list of scripts for data analysis after the generation of simulated data.  They are all R scripts, all of which were tested on R version 3.5.2. The required packages are: Cairo and rootSolve. 
- mode-param-fitness-scat-plot.R:	Generate the scatter plots and boxplots in Fig. 1.
- find-bistability-rootSolve2.R:	Generate a table called "bistable-count-FP-200-2.csv" that counts a number of bistable individuals in evolved populations.
- find-bistability-rootSolve3.R:	Generate a table called "bistable-count-FP-200-3.csv" that counts a number of bistable individuals at generations 10,000, 20,000, and 30,000 for each phase.
- barplot-evo-bistable.R: Use bistable-count-FP-200-3.csv to generate Fig. 2a.
- plot-confusion-matrix.R: Use bistable-count-FP-200-2.csv to generate Fig. 2b.
- plot-confusion-matrix2.R: Use bistable-count-FP-200-2.csv to generate Fig. 2c.
- combine-stability-data.sh: A wrapper shell script to compute stability levels (e.g., stability-n1-2.csv and stability-n3-2.csv).
- get-mean-stability2.R:	Generate a plot for the time evolution of the mean stability in Fig. 3a.
- extract-stability-scatterplot-data.sh: Extract data from the stability measure output generated by combine-stability-data.sh for Fig. 3b.
- comp-stability3.R:	Generate the plot to compare stability measures between the intermediate population and the derived population in Figure 3b. 
- FP-distribution2.R:	Generate illustrative monostable and bistable potential functions using the parameters of the fittest individuals of randomly picked samples with high stability levels for Figs. 3c and d.  

2. Simulation to generate data for the Gaussian-based model:
a. The simulated was implemented in R. No additional packages are needed to run the simulator.  To run the simulator, at the top level directory of this package, type in "./run-evo2-nw.sh," which calls evolution-sim2.R with various settings.  This simulator is expected to take less time than the evolutionary simulation of the gene-circuit model, but depending on the runtime environment, it may take hours.  

The following is a list of scripts used in data analysis.  They are all R scripts, all of which were tested on R version 3.5.2. The required package is: Cairo. 
- Scripts for data analysis after the generation of simulated data of the abstract model:
- get-mean-evolution-nw-2.R:	Generate the mean time evolution of the evolvable Gaussian width parameter in Figure 4a.
- monostable-fitness-distribution.R and bistable-fitness-distribution.R:	Generate the average fitness contour heatmap in Figure 4b.
- fitness-vs-width.R and fitness-vs-width-bi2.R:	Generate plots to illustrate how different Gaussian width value can affect the average fitness for both monostable and bistable models.


Some of the scripts use parallel (O. Tange (2011): GNU Parallel - The Command-Line Power Tool,;login: The USENIX Magazine, February 2011:42-47.)
